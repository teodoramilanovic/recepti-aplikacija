package local.rps.korisnik;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

@RestController
@CrossOrigin(origins = "*")
public class KorisnikController {
	
	@Autowired
	KorisnikService korisnikService;
	
	@RequestMapping("/korisnici/{id}")
	public Korisnik getKorisnikById(@PathVariable int id, @RequestHeader(name="authorization") String header) {
		return korisnikService.getKorisnikById(id, header);
	}
	
	@RequestMapping("/korisnik/{email}")
	public KorisnikDetails getKorisnikByEmail(@PathVariable String email, @RequestHeader(name="authorization") String header) {
		return korisnikService.getKorisnikByEmail(email, header);
	}
	
	@RequestMapping("/korisnici/jeDostupan/{email}")
	public boolean jeDostupan(@PathVariable String email, @RequestHeader(name="authorization") String header) {
		return korisnikService.jeDostupan(email);
	}
	
	@RequestMapping(method=RequestMethod.POST, value="/korisnici/register")
	public Resp addKorisnik(@RequestBody Korisnik korisnik) {
		return korisnikService.addKorisnik(korisnik);
	}
	
	@RequestMapping(method=RequestMethod.POST, value="/korisnici/login")
	public Resp loginKorisnik(@RequestBody Korisnik korisnik) {
		return korisnikService.loginKorisnik(korisnik);
	}
	
	@RequestMapping(method=RequestMethod.PUT, value="/korisnici")
	public void updateKorisnik(@RequestBody Korisnik korisnik) {
		korisnikService.updateKorisnik(korisnik);
	}
	
	@RequestMapping(method=RequestMethod.PUT, value="/korisnici/promjenaLozinke")
	public boolean promijeniLozinku(@RequestBody PromjenaLozinkeDto pl,  @RequestHeader(name="authorization") String header) {
		return korisnikService.promijeniLozinku(pl,header);
	}
	
	@RequestMapping(method =  RequestMethod.DELETE, value = "/korisnici/{id}")
	public void deleteKorisnikById(@PathVariable int id) {
		korisnikService.deleteKorisnikById(id);
	}
}